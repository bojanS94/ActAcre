{"mappings":"ACAA,SAAS,gBAAgB,CAAC,mBAAoB,KAC5C,IAAI,EAAW,EACX,EAAgB,EAEd,EAAc,SAAS,cAAc,CAAC,gBACtC,EAAc,SAAS,cAAc,CAAC,gBACtC,EAAkB,SAAS,cAAc,CAAC,YAC1C,EAAe,SAAS,aAAa,CAAC,gBACtC,EAAc,SAAS,cAAc,CAAC,gBACtC,EAAe,SAAS,cAAc,CAAC,cACvC,EAAc,SAAS,aAAa,CAAC,yBACrC,EAAuB,SAAS,cAAc,CAAC,kBAG/C,EAAY,SAAS,cAAc,CAAC,aACpC,EAAY,SAAS,cAAc,CAAC,cAM1C,SAAS,EAAe,CAAM,EAC5B,CAAA,GAAsB,CAAtB,EACe,GACb,CAAA,EAAW,CAAA,EAEb,EAAgB,WAAW,CAAG,CAChC,CATA,EAAY,gBAAgB,CAAC,QAAS,IAAM,EAAe,IAC3D,EAAY,gBAAgB,CAAC,QAAS,IAAM,EAAe,KAW3D,IAAI,EAAe,EACb,EAAW,SAAS,aAAa,CAAC,aAClC,EAAW,SAAS,gBAAgB,CAAC,sBACrC,EAAY,EAAS,MAAM,CAG3B,EAAkB,KACtB,IAAM,EAAc,OAAO,UAAU,QACrC,AAAI,GAAe,IACV,EACE,GAAe,IACjB,EAEF,CACT,EAEI,EAAe,IAGnB,OAAO,gBAAgB,CAAC,SAAU,KAChC,EAAe,IACf,GACF,GAEA,IAAM,EAAY,CAAQ,CAAC,EAAE,CAAC,WAAW,CAAG,SAAS,iBAAiB,CAAQ,CAAC,EAAE,EAAE,WAAW,EAExF,EAAiB,KACrB,EAAS,KAAK,CAAC,SAAS,CAAG,CAAC,YAAY,EAAE,EAAe,EAAU,GAAG,CAAC,AACzE,EAEA,SAAS,aAAa,CAAC,aAAa,gBAAgB,CAAC,QAAS,KACxD,EAAe,EACjB,IAEA,EAAe,EAAY,EAE7B,GACF,GAEA,SAAS,aAAa,CAAC,aAAa,gBAAgB,CAAC,QAAS,KACxD,EAAe,EAAY,EAC7B,IAEA,EAAe,EAEjB,GACF,GAGA,SAAS,gBAAgB,CAAC,cAAc,OAAO,CAAC,AAAA,IAC9C,EAAQ,gBAAgB,CAAC,QAAS,KAChC,EAAY,SAAS,CAAC,GAAG,CAAC,OAC5B,EACF,GAGA,EAAa,gBAAgB,CAAC,QAAS,KACrC,GAAiB,EACjB,EAAY,SAAS,CAAG,CAAC,GAAG,EAAE,EAAc,KAAK,EAAE,EAAgB,EAAI,IAAM,GAAG,kBAAkB,CAAC,CACnG,EAAqB,WAAW,CAAG,EACnC,EAAY,SAAS,CAAC,GAAG,CAAC,OAC5B,GAGA,EAAa,gBAAgB,CAAC,QAAS,IAAM,EAAY,SAAS,CAAC,MAAM,CAAC,SAG1E,SAAS,gBAAgB,CAAC,QAAS,AAAC,IAC9B,CAAC,EAAY,QAAQ,CAAC,EAAE,MAAM,GAAK,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,eAAiB,EAAY,SAAS,CAAC,QAAQ,CAAC,SACvG,EAAY,SAAS,CAAC,MAAM,CAAC,OAEjC,GAGA,EAAU,gBAAgB,CAAC,QAAS,KAClC,EAAU,SAAS,CAAC,MAAM,CAAC,QAC3B,EAAU,SAAS,CAAC,MAAM,CAAC,OAC7B,EACF","sources":["<anon>","js/app.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", ()=>{\n    let quantity = 1;\n    let totalQuantity = 0;\n    const increaseBtn = document.getElementById(\"increase-btn\");\n    const decreaseBtn = document.getElementById(\"decrease-btn\");\n    const quantityDisplay = document.getElementById(\"quantity\");\n    const addToCartBtn = document.querySelector(\".add-to-cart\");\n    const cartSidebar = document.getElementById(\"cart-sidebar\");\n    const closeCartBtn = document.getElementById(\"close-cart\");\n    const cartContent = document.querySelector(\".cart-sidebar-content\");\n    const totalQuantityDisplay = document.getElementById(\"total-quantity\");\n    // Mobile menu elements\n    const hamburger = document.getElementById(\"hamburger\");\n    const mobileNav = document.getElementById(\"mobile-nav\");\n    // Upravljanje količinom\n    increaseBtn.addEventListener(\"click\", ()=>updateQuantity(1));\n    decreaseBtn.addEventListener(\"click\", ()=>updateQuantity(-1));\n    function updateQuantity(change) {\n        quantity = quantity + change;\n        if (quantity < 1) quantity = 1; // Sprečava negativne vrednosti\n        quantityDisplay.textContent = quantity;\n    }\n    // Carousel functionality\n    let currentIndex = 0;\n    const carousel = document.querySelector(\".carousel\");\n    const products = document.querySelectorAll(\".carousel .product\");\n    const itemCount = products.length;\n    // Funkcija koja određuje broj vidljivih elemenata na osnovu širine prozora\n    const getVisibleItems = ()=>{\n        const screenWidth = window.innerWidth;\n        if (screenWidth <= 480) return 1; // Na ekranima do 480px prikazuje 1 stavku\n        else if (screenWidth <= 771) return 2; // Na ekranima do 771px prikazuje 2 stavke\n        return 3; // Na većim ekranima prikazuje 3 stavke\n    };\n    let visibleItems = getVisibleItems();\n    // Prilagodi broj vidljivih stavki na promeni širine prozora\n    window.addEventListener(\"resize\", ()=>{\n        visibleItems = getVisibleItems();\n        updateCarousel();\n    });\n    const itemWidth = products[0].offsetWidth + parseInt(getComputedStyle(products[0]).marginRight);\n    const updateCarousel = ()=>{\n        carousel.style.transform = `translateX(-${currentIndex * itemWidth}px)`;\n    };\n    document.querySelector(\".prev-btn\").addEventListener(\"click\", ()=>{\n        if (currentIndex > 0) currentIndex--;\n        else currentIndex = itemCount - visibleItems; // Idemo na poslednju stranicu\n        updateCarousel();\n    });\n    document.querySelector(\".next-btn\").addEventListener(\"click\", ()=>{\n        if (currentIndex < itemCount - visibleItems) currentIndex++;\n        else currentIndex = 0; // Vratimo se na početak\n        updateCarousel();\n    });\n    // General open cart functionality for any element with class 'open-cart'\n    document.querySelectorAll(\".open-cart\").forEach((element)=>{\n        element.addEventListener(\"click\", ()=>{\n            cartSidebar.classList.add(\"open\");\n        });\n    });\n    // Add to cart functionality (updates cart content and opens cart)\n    addToCartBtn.addEventListener(\"click\", ()=>{\n        totalQuantity += quantity;\n        cartContent.innerHTML = `<p>${totalQuantity} item${totalQuantity > 1 ? \"s\" : \"\"} in your cart.</p>`;\n        totalQuantityDisplay.textContent = totalQuantity;\n        cartSidebar.classList.add(\"open\");\n    });\n    // Close cart sidebar\n    closeCartBtn.addEventListener(\"click\", ()=>cartSidebar.classList.remove(\"open\"));\n    // Close sidebar when clicking outside\n    document.addEventListener(\"click\", (e)=>{\n        if (!cartSidebar.contains(e.target) && !e.target.closest(\".open-cart\") && cartSidebar.classList.contains(\"open\")) cartSidebar.classList.remove(\"open\");\n    });\n    // Open/close mobile menu on hamburger click\n    hamburger.addEventListener(\"click\", ()=>{\n        hamburger.classList.toggle(\"open\");\n        mobileNav.classList.toggle(\"open\");\n    });\n});\n\n//# sourceMappingURL=index.ccf5eb9c.js.map\n","document.addEventListener('DOMContentLoaded', () => {\r\n  let quantity = 1;\r\n  let totalQuantity = 0;\r\n\r\n  const increaseBtn = document.getElementById('increase-btn');\r\n  const decreaseBtn = document.getElementById('decrease-btn');\r\n  const quantityDisplay = document.getElementById('quantity');\r\n  const addToCartBtn = document.querySelector('.add-to-cart');\r\n  const cartSidebar = document.getElementById('cart-sidebar');\r\n  const closeCartBtn = document.getElementById('close-cart');\r\n  const cartContent = document.querySelector('.cart-sidebar-content');\r\n  const totalQuantityDisplay = document.getElementById('total-quantity');\r\n\r\n  // Mobile menu elements\r\n  const hamburger = document.getElementById('hamburger');\r\n  const mobileNav = document.getElementById('mobile-nav');\r\n\r\n  // Upravljanje količinom\r\n  increaseBtn.addEventListener('click', () => updateQuantity(1));\r\n  decreaseBtn.addEventListener('click', () => updateQuantity(-1));\r\n\r\n  function updateQuantity(change) {\r\n    quantity = quantity + change;\r\n    if (quantity < 1) {\r\n      quantity = 1; // Sprečava negativne vrednosti\r\n    }\r\n    quantityDisplay.textContent = quantity;\r\n  }\r\n\r\n  // Carousel functionality\r\n  let currentIndex = 0;\r\n  const carousel = document.querySelector('.carousel');\r\n  const products = document.querySelectorAll('.carousel .product');\r\n  const itemCount = products.length;\r\n\r\n  // Funkcija koja određuje broj vidljivih elemenata na osnovu širine prozora\r\n  const getVisibleItems = () => {\r\n    const screenWidth = window.innerWidth;\r\n    if (screenWidth <= 480) {\r\n      return 1; // Na ekranima do 480px prikazuje 1 stavku\r\n    } else if (screenWidth <= 771) {\r\n      return 2; // Na ekranima do 771px prikazuje 2 stavke\r\n    }\r\n    return 3; // Na većim ekranima prikazuje 3 stavke\r\n  };\r\n\r\n  let visibleItems = getVisibleItems();\r\n\r\n  // Prilagodi broj vidljivih stavki na promeni širine prozora\r\n  window.addEventListener('resize', () => {\r\n    visibleItems = getVisibleItems();\r\n    updateCarousel();\r\n  });\r\n\r\n  const itemWidth = products[0].offsetWidth + parseInt(getComputedStyle(products[0]).marginRight);\r\n\r\n  const updateCarousel = () => {\r\n    carousel.style.transform = `translateX(-${currentIndex * itemWidth}px)`;\r\n  };\r\n\r\n  document.querySelector('.prev-btn').addEventListener('click', () => {\r\n    if (currentIndex > 0) {\r\n      currentIndex--;\r\n    } else {\r\n      currentIndex = itemCount - visibleItems; // Idemo na poslednju stranicu\r\n    }\r\n    updateCarousel();\r\n  });\r\n\r\n  document.querySelector('.next-btn').addEventListener('click', () => {\r\n    if (currentIndex < itemCount - visibleItems) {\r\n      currentIndex++;\r\n    } else {\r\n      currentIndex = 0; // Vratimo se na početak\r\n    }\r\n    updateCarousel();\r\n  });\r\n\r\n  // General open cart functionality for any element with class 'open-cart'\r\n  document.querySelectorAll('.open-cart').forEach(element => {\r\n    element.addEventListener('click', () => {\r\n      cartSidebar.classList.add('open');\r\n    });\r\n  });\r\n\r\n  // Add to cart functionality (updates cart content and opens cart)\r\n  addToCartBtn.addEventListener('click', () => {\r\n    totalQuantity += quantity;\r\n    cartContent.innerHTML = `<p>${totalQuantity} item${totalQuantity > 1 ? 's' : ''} in your cart.</p>`;\r\n    totalQuantityDisplay.textContent = totalQuantity;\r\n    cartSidebar.classList.add('open');\r\n  });\r\n\r\n  // Close cart sidebar\r\n  closeCartBtn.addEventListener('click', () => cartSidebar.classList.remove('open'));\r\n\r\n  // Close sidebar when clicking outside\r\n  document.addEventListener('click', (e) => {\r\n    if (!cartSidebar.contains(e.target) && !e.target.closest('.open-cart') && cartSidebar.classList.contains('open')) {\r\n      cartSidebar.classList.remove('open');\r\n    }\r\n  });\r\n\r\n  // Open/close mobile menu on hamburger click\r\n  hamburger.addEventListener('click', () => {\r\n    hamburger.classList.toggle('open');\r\n    mobileNav.classList.toggle('open');\r\n  });\r\n});\r\n"],"names":["document","addEventListener","quantity","totalQuantity","increaseBtn","getElementById","decreaseBtn","quantityDisplay","addToCartBtn","querySelector","cartSidebar","closeCartBtn","cartContent","totalQuantityDisplay","hamburger","mobileNav","updateQuantity","change","textContent","currentIndex","carousel","products","querySelectorAll","itemCount","length","getVisibleItems","screenWidth","window","innerWidth","visibleItems","updateCarousel","itemWidth","offsetWidth","parseInt","getComputedStyle","marginRight","style","transform","forEach","element","classList","add","innerHTML","remove","e","contains","target","closest","toggle"],"version":3,"file":"index.ccf5eb9c.js.map"}